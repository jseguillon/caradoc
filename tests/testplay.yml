# TODO: add more localhost
# TODO: add free mode + random sleep
# TODO: test delegated
# Twice same name to test robustness

- name: "ok=2 changed=1"
  hosts: localhost
  gather_facts: false
  tasks:
    - name: task 1
      debug: msg="Hello 1"
      changed_when: False
      loop: [1, 2]

    - name: task 2
      debug: msg="Hello 2"
      changed_when: True
      loop: [1, 2]


- name: "ok=1"
  hosts: localhost
  gather_facts: false
  tasks:
    - debug: msg="Hello 1"
      when: "item !=2"
      loop: [1, 2 ]


- name: "ok=1 rescued=1 "
  hosts: localhost
  gather_facts: false
  tasks:
    - block:
        - fail: msg="fail"
      rescue:
        - debug: msg="rescue"


- name: "ok=3 changed=2 * 7"
  hosts: all
  tags: play_names
  handlers:
    - name: my handler
      debug:
        msg: "handler"
      changed_when: true
  tasks:
    - name: Task debug with handler
      debug: msg=a
      changed_when: true
      notify: my handler

- name: Same playbook name
  hosts: all
  gather_facts: false
  tags: play_names
  tasks:
    - name: Task debug
      debug: msg=a

- name: Same playbook name
  hosts: all
  gather_facts: false
  tags: play_names
  tasks:
    - name: Task debug
      debug: msg=a

- name: First playbook
  hosts: all
  tags: basic
  any_errors_fatal: false
  tasks:
    # move to limits test case
    - name: Task debug with the special - char in it's a name -
      debug: msg=a

    - name: Task debug with the special - char in it's a name -
      debug: msg=a

    - name: Task debug with a name
      debug: msg=a

    # Test two tasks same name
    - name: Task debug with a name
      debug: msg=b

    # noname
    - debug: msg=x

    - name: Test a no_log
      debug:
        msg: "no one should see this"

    - name: Test something is changed
      debug:
        msg: something changed
      changed_when: True

    - name: Test an ignored error
      debug:
        msg: an ignored error
      failed_when: ansible_hostname != 'host2'
      ignore_errors: True

    - name: Test a skip
      debug:
        msg: should be skipped
      when: False

    - name: Test an empty loop
      debug:
        msg: "{{ item }}"
      loop: []

    - name: Loop of 3
      debug:
        msg: "{{ item }}"
      loop:
        - 1
        - 2
        - 3

    - name: Loop control
      debug:
        msg: "{{ item.other }}"
      loop_control:
        label: "{{ item.name }}"
      loop:
        - name: 1
          other: other
        - name: 2
          other: other2
      tags:
        - loop_control

    - name: Set a fact
      set_fact:
        myfact: fact

    - name: Task fail one host
      debug:
        msg: "{{ inventory_hostname }}"

    - name: Block get diffs
      block:
        - name: Create temporary build directory
          ansible.builtin.tempfile:
            state: directory
            suffix: build

        - name: Create temporary file
          ansible.builtin.tempfile:
            state: file
            suffix: temp
          register: tempfile_1

        - name: Add a line to a file
          ansible.builtin.lineinfile:
            line: |-
              this
              is
              a file
            create: yes
            path: "{{ tempfile_1.path }}"
          when: tempfile_1.path is defined

        - name: Add another line to a file
          ansible.builtin.copy:
            content: |-
              this
              is a now modified file
            dest: "{{ tempfile_1.path }}"
          when:
            - tempfile_1.path is defined
            - inventory_hostname != 'host2'
            - inventory_hostname != 'host3'


        - name: "Task with {{ jinja }} into name"
          debug:
            msg: "and a jinja message: {{ True }}"
          tags: jinja
          ignore_errors: True

        - name: "Task with an unkwon var into name"
          debug:
            msg: "{{ unknown_var }}"
          tags: jinja
          ignore_errors: True


        - name: "Task with item {{ item }} into name"
          debug:
            msg: "{{ item  }}"
          ignore_errors: True
          tags: jinja
          loop:
            - a
            - b
    - name: Do some include
      include_tasks: tasks.yaml

    - ansible.builtin.template:
        src: simple.yml.j2
        dest: /tmp
        mode: u=rw,g=r,o=r
      run_once: True

    - ansible.builtin.template:
        src: raw-with-jinja.yml.j2
        dest: /tmp
        mode: u=rw,g=r,o=r
      run_once: True

# Test parrallel
- hosts: three
  name: parrallel
  become: false
  tags: multi
  tasks:
    - name: one
      debug: msg=a

- hosts: four
  name: parrallel
  become: false
  tags: multi
  tasks:
    - name: one
      debug: msg=a

- hosts: five
  name: parrallel
  become: false
  tags: multi
  tasks:
    - name: one
      debug: msg=a

- hosts: all
  name: parrallel
  become: false
  tags: multi
  tasks:
    - name: one
      debug: msg=a

# # Delegated
# - hosts: host1
#   become: false
#   tags: delegated
#   name: delegated
#   tasks:
#     - name: one
#       command:
#         cmd: echo 'hi'
#       delegate_to: host2

# - hosts: all
#   become: false
#   name: free
#   strategy: free
#   tags: free
#   tasks:
#     - name: one
#       shell:
#         cmd: "/bin/bash -c 'sleep {{ sleep_time }}'"
#     - name: two
#       command:
#         cmd: /bin/bash -c 'sleep $(($RANDOM % 10))'
#     - name: three
#       shell:
#         cmd: /bin/bash -c 'sleep $(($RANDOM % 10))'

# - hosts: all
#   become: false
#   tags: fail
#   tasks:
#     - fail:
