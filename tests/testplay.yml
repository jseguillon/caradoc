# TODO: add more localhost
# TODO: add free mode + random sleep
# TODO: test delegated
# Twice same name to test robustness
- name: Same playbook name
  hosts: all
  gather_facts: false
  tags: play_names
  tasks:
    - name: Task debug
      debug: msg=a

- name: Same playbook name
  hosts: all
  gather_facts: false
  tags: play_names
  tasks:
    - name: Task debug
      debug: msg=a

- name: First playbook
  hosts: all
  tags: basic
  any_errors_fatal: false
  tasks:
    # move to limits test case
    - name: Task debug with the special - char in it's a name -
      debug: msg=a

    - name: Task debug with the special - char in it's a name -
      debug: msg=a

    - name: Task debug with a name
      debug: msg=a

    # Test two tasks same name
    - name: Task debug with a name
      debug: msg=b

    # noname
    - debug: msg=x

    - name: Test a no_log
      debug:
        msg: "no one should see this"

    - name: Test something is changed
      debug:
        msg: something changed
      changed_when: True

    - name: Test an ignored error
      debug:
        msg: an ignored error
      failed_when: ansible_hostname != 'host2'
      ignore_errors: True

    - name: Test a skip
      debug:
        msg: should be skipped
      when: False

    - name: Test an empty loop
      debug:
        msg: "{{ item }}"
      loop: []

    - name: Loop of 3
      debug:
        msg: "{{ item }}"
      loop:
        - 1
        - 2
        - 3

    - name: Loop control
      debug:
        msg: "{{ item.other }}"
      loop_control:
        label: "{{ item.name }}"
      loop:
        - name: 1
          other: other
        - name: 2
          other: other2

    - name: Set a fact
      set_fact:
        myfact: fact

    - name: Task fail one host
      debug:
        msg: "{{ inventory_hostname }}"
      failed_when: inventory_hostname == 'host1'

    - name: Block get diffs
      block:
        - name: Create temporary build directory
          ansible.builtin.tempfile:
            state: directory
            suffix: build

        - name: Create temporary file
          ansible.builtin.tempfile:
            state: file
            suffix: temp
          register: tempfile_1

        - name: Add a line to a file
          ansible.builtin.lineinfile:
            line: |-
              first block first line
              first block second line
              first block third line
            create: yes
            path: "{{ tempfile_1.path }}"
          when: tempfile_1.path is defined

        - name: Add another line to a file
          ansible.builtin.lineinfile:
            line: |-
              second block first line
              second block second line
              second block third line
            insertbefore: first block second line
            path: "{{ tempfile_1.path }}"
          when: tempfile_1.path is defined

        - name: Add again line to a file
          ansible.builtin.lineinfile:
            line: |-
              third block first line
              third block second line
              third block third line
            insertbefore: second block second line
            path: "{{ tempfile_1.path }}"
          when: tempfile_1.path is defined

    - name: Do some include
      include_tasks: tasks.yaml

- import_playbook: playbook_import.yaml

# Test parrallel
- hosts: three
  name: parrallel
  become: false
  tags: multi
  tasks:
    - name: one
      debug: msg=a

- hosts: four
  name: parrallel
  become: false
  tags: multi
  tasks:
    - name: one
      debug: msg=a

- hosts: five
  name: parrallel
  become: false
  tags: multi
  tasks:
    - name: one
      debug: msg=a

- hosts: all
  name: parrallel
  become: false
  tags: multi
  tasks:
    - name: one
      debug: msg=a

# # Delegated
# - hosts: host1
#   become: false
#   tags: delegated
#   name: delegated
#   tasks:
#     - name: one
#       command:
#         cmd: echo 'hi'
#       delegate_to: host2

# - hosts: all
#   become: false
#   name: free
#   strategy: free
#   tags: free
#   tasks:
#     - name: one
#       shell:
#         cmd: "/bin/bash -c 'sleep {{ sleep_time }}'"
#     - name: two
#       command:
#         cmd: /bin/bash -c 'sleep $(($RANDOM % 10))'
#     - name: three
#       shell:
#         cmd: /bin/bash -c 'sleep $(($RANDOM % 10))'

# - hosts: all
#   become: false
#   tags: fail
#   tasks:
#     - fail:
